<?xml version="1.0"?>
<!--

  Copyright (c) 2019, PAL Robotics, S.L.
  All rights reserved.

  This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/ or send a letter to
  Creative Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.

-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="imx179_camera_gazebo" params="name:=camera topic:=camera frame:=camera_optic_frame">
    <gazebo reference="${name}_link">
      <sensor type="wideanglecamera" name="${name}_imx179_camera">
        <update_rate>30.0</update_rate>
        <camera name="${name}_camera">
          <!-- <horizontal_fov>${180.0*M_PI/180.0}</horizontal_fov> -->
          <horizontal_fov>3.1415</horizontal_fov>
          <image>
            <width>1280</width>
            <height>960</height>
            <format>B8G8R8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>100</far>
          </clip>
          <lens>
            <!-- type element is mandatory -->
            <type>custom</type>
            <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
            <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
            <custom_function>
              <c1>1.05</c1>
              <!-- linear scaling -->
              <c2>4</c2>
              <!-- angle scaling -->
              <f>1.0</f>
              <!-- one more scaling parameter -->
              <fun>tan</fun>
              <!-- one of sin,tan,id -->
            </custom_function>
            <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
            <!-- othervise it depends on lens type and custom function, if there is one -->
            <scale_to_hfov>true</scale_to_hfov>
            <!-- clip everything that is outside of this angle -->
            <cutoff_angle>3.1415</cutoff_angle>
            <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
            <env_texture_size>512</env_texture_size>
          </lens>
          <!-- <noise>
            <type>gaussian</type> -->
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <!-- <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise> -->
        </camera>
        <plugin name="${name}_camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20.0</updateRate>
          <cameraName>${topic}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${frame}</frameName>
          <!-- <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2> -->
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
